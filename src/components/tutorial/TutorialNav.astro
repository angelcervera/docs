---
import { getTutorialPages, getTutorialUnits } from '../../util/getTutorialPages';
import { getLanguageFromURL } from '../../util';
import Progress from './Progress.astro';
import TabbedContent from '../tabs/TabbedContent.astro';
import TabListItem from '../tabs/TabListItem.astro';
import TabPanel from '../tabs/TabPanel.astro';

const currentUrl = Astro.url.pathname.replace(/\/$/, '');
const lang = getLanguageFromURL(Astro.url.pathname);
const tutorialPages = getTutorialPages(await Astro.glob(`../../pages/*/tutorial/**/*.md`), lang);
const units = getTutorialUnits(tutorialPages);

const makeUnitId = (index: number) => `tutorial-unit-nav-panel-${index}`;
const isCurrentUnit = (unit: typeof units[number]) =>
	unit.lessons.some((lesson) => currentUrl.endsWith(lesson.slug));
---

<nav>
	<TabbedContent>
		<Fragment slot="tab-list">
			{
				units.map((unit, idx) => (
					<TabListItem id={makeUnitId(idx)} initial={isCurrentUnit(unit)}>
						{idx}
					</TabListItem>
				))
			}
		</Fragment>
		{
			units.map((unit, idx) => (
				<TabPanel id={makeUnitId(idx)} initial={isCurrentUnit(unit)}>
					<div class="unit">
						<h2 class="heading">{unit.title}</h2>
						<ol class="lessons">
							{unit.lessons.map((lesson, index) => (
								<li class="header-link">
									<a
										href={`/${lang}/${lesson.slug}/`}
										aria-current={currentUrl.endsWith(lesson.slug)}
									>
										<Progress path={lesson.url} />
										{index}. {lesson.frontmatter.title}
									</a>
								</li>
							))}
						</ol>
					</div>
				</TabPanel>
			))
		}
	</TabbedContent>
</nav>

<style>
	nav {
		width: 100%;
		padding: var(--doc-padding-block) 0.5rem 0 0;
		overflow: auto;
		font-size: var(--theme-text-xs);
	}

	nav :global(.tab-link) {
		display: block;
		padding: 0.5em;
		font-size: var(--theme-text-base);
		text-decoration: none;
		color: var(--theme-text-lighter);
	}

	nav :global(.tab-link:hover),
	nav :global(.tab-link:focus) {
		text-decoration: none;
	}

	/*
	1. Highlight the initial link before the component hydrates & applies `role="tab"`.
	2. Highlight the selected link after the component hydrates.
	*/
	nav :global(.tab-link[data-initial]:not([role='tab'])), /* 1 */
	nav :global(.tab-link[aria-selected='true']) /* 2 */ {
		color: var(--theme-text);
		background-color: var(--theme-bg-offset);
		font-weight: bold;
	}

	.unit {
		padding: 1em;
		background-color: var(--theme-bg-offset);
	}

	nav ol.lessons {
		margin: 0;
		padding-inline-start: 0;
		list-style: none;
	}

	h2.heading {
		font-size: var(--theme-text-sm);
		margin-top: 0;
		padding: 0;
	}

	a[aria-current='true'] {
		color: var(--theme-text);
	}

	.header-link {
		border: 0;
		padding: 0;
	}

	.header-link :global(svg) {
		opacity: 1;
	}
</style>
